<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Financial Calculators</title>
    <style>
        /* General Styles */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #ff9a9e, #fad0c4, #fbc2eb, #a6c1ee, #f6d365);
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
            color: #333;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            width: 90%;
            max-width: 1000px;
            margin: 2rem auto;
        }

        h1 {
            font-size: 2.5rem;
            color: #2c3e50;
            text-align: center;
            margin-bottom: 2rem;
        }

        /* Tabs Styling */
        .tabs {
            display: grid;
            grid-template-columns: repeat(6, 1fr);
            gap: 0.5rem;
            margin-bottom: 2rem;
        }

        .tab-button {
            background: #3498db;
            color: white;
            border: none;
            padding: 0.8rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .tab-button.active, .tab-button:hover {
            background: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        }

        /* Calculator Styling */
        .calculator {
            display: none;
            animation: fadeIn 0.5s ease;
        }

        .calculator.active {
            display: block;
        }

        .calculator h2 {
            color: #2c3e50;
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .input-group {
            margin: 1rem 0;
        }

        input[type="number"] {
            width: 100%;
            padding: 0.8rem;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        input[type="number"]:focus {
            border-color: #3498db;
            box-shadow: 0 0 8px rgba(52, 152, 219, 0.3);
            outline: none;
        }

        .button-group {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 1.5rem;
        }

        button {
            background: #27ae60;
            color: white;
            border: none;
            padding: 0.8rem 1.5rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        button.reset {
            background: #e74c3c;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
        }

        button:active {
            transform: translateY(0);
        }

        .result {
            margin: 2rem 0;
            padding: 1.5rem;
            background: #f8f9fa;
            border-radius: 8px;
            text-align: center;
            font-size: 1.2rem;
            color: #2c3e50;
            animation: slideUp 0.5s ease;
        }

        /* Info Section */
        .info-section {
            margin-top: 3rem;
            padding: 1.5rem;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .info-section h2 {
            color: #2c3e50;
            margin-bottom: 1rem;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 1rem;
                margin: 1rem;
            }

            .tabs {
                grid-template-columns: 1fr;
            }

            .tab-button {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            button {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .button-group {
                flex-direction: column;
            }
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes slideUp {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>

<div class="container">
    <h1>Financial Calculators</h1>
    
    <div class="tabs">
        <button class="tab-button active" onclick="showCalculator('sip')">SIP</button>
        <button class="tab-button" onclick="showCalculator('lic')">LIC</button>
        <button class="tab-button" onclick="showCalculator('gold')">Gold Loan</button>
        <button class="tab-button" onclick="showCalculator('pay')">7th Pay</button>
        <button class="tab-button" onclick="showCalculator('emi')">EMI</button>
        <button class="tab-button" onclick="showCalculator('retirement')">Retirement</button>
    </div>

    <!-- SIP Calculator -->
    <div id="sip-calculator" class="calculator active">
        <h2>SIP Calculator</h2>
        <div class="input-group">
            <input type="number" id="sip-amount" placeholder="Monthly Investment (₹)">
            <input type="number" id="sip-rate" placeholder="Expected Annual Return (%)">
            <input type="number" id="sip-years" placeholder="Investment Period (Years)">
        </div>
        <div class="button-group">
            <button onclick="calculateSIP()">Calculate</button>
            <button class="reset" onclick="resetSIP()">Reset</button>
        </div>
        <div class="result" id="sip-result"></div>
    </div>

    <!-- LIC Maturity Calculator -->
    <div id="lic-calculator" class="calculator">
        <h2>LIC Maturity Calculator</h2>
        <div class="input-group">
            <input type="number" id="lic-premium" placeholder="Annual Premium (₹)">
            <input type="number" id="lic-term" placeholder="Policy Term (Years)">
            <input type="number" id="lic-bonus" placeholder="Bonus Rate (%)">
        </div>
        <div class="button-group">
            <button onclick="calculateLIC()">Calculate</button>
            <button class="reset" onclick="resetLIC()">Reset</button>
        </div>
        <div class="result" id="lic-result"></div>
    </div>

    <!-- Gold Loan Calculator -->
    <div id="gold-calculator" class="calculator">
        <h2>Gold Loan Calculator</h2>
        <div class="input-group">
            <input type="number" id="gold-value" placeholder="Gold Value (₹)">
            <input type="number" id="loan-percent" placeholder="Loan Percentage (%)">
        </div>
        <div class="button-group">
            <button onclick="calculateGoldLoan()">Calculate</button>
            <button class="reset" onclick="resetGoldLoan()">Reset</button>
        </div>
        <div class="result" id="gold-result"></div>
    </div>

    <!-- 7th Pay-Commission Calculator -->
    <div id="pay-calculator" class="calculator">
        <h2>7th Pay-Commission Calculator</h2>
        <div class="input-group">
            <input type="number" id="basic-pay" placeholder="Basic Pay (₹)">
            <input type="number" id="da" placeholder="Dearness Allowance (%)">
        </div>
        <div class="button-group">
            <button onclick="calculatePay()">Calculate</button>
            <button class="reset" onclick="resetPay()">Reset</button>
        </div>
        <div class="result" id="pay-result"></div>
    </div>

    <!-- EMI Calculator -->
    <div id="emi-calculator" class="calculator">
        <h2>EMI Calculator</h2>
        <div class="input-group">
            <input type="number" id="loan-amount" placeholder="Loan Amount (₹)">
            <input type="number" id="interest-rate" placeholder="Annual Interest Rate (%)">
            <input type="number" id="loan-tenure" placeholder="Loan Tenure (Years)">
        </div>
        <div class="button-group">
            <button onclick="calculateEMI()">Calculate</button>
            <button class="reset" onclick="resetEMI()">Reset</button>
        </div>
        <div class="result" id="emi-result"></div>
    </div>

    <!-- Retirement Planner -->
    <div id="retirement-calculator" class="calculator">
        <h2>Retirement Planner</h2>
        <div class="input-group">
            <input type="number" id="current-age" placeholder="Current Age">
            <input type="number" id="retirement-age" placeholder="Retirement Age">
            <input type="number" id="monthly-savings" placeholder="Monthly Savings (₹)">
            <input type="number" id="expected-return" placeholder="Expected Annual Return (%)">
        </div>
        <div class="button-group">
            <button onclick="calculateRetirement()">Calculate</button>
            <button class="reset" onclick="resetRetirement()">Reset</button>
        </div>
        <div class="result" id="retirement-result"></div>
    </div>

    <!-- How to Use Section -->
    <div class="info-section">
        <h2>How to Use?</h2>
        <p>
            1. Select the desired calculator from the tab menu<br>
            2. Fill in all required fields with appropriate values<br>
            3. Click Calculate to see results<br>
            4. Use Reset to clear all fields<br>
            5. Switch between calculators using the tabs
        </p>
    </div>
</div>

<script>
    // Tab Navigation
    function showCalculator(calculatorId) {
        document.querySelectorAll('.calculator').forEach(calc => calc.classList.remove('active'));
        document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
        document.getElementById(`${calculatorId}-calculator`).classList.add('active');
        document.querySelector(`[onclick="showCalculator('${calculatorId}')"]`).classList.add('active');
    }

    // Common Validation Function
    function validateInputs(...inputs) {
        return inputs.every(input => {
            if (isNaN(input) || input <= 0) {
                alert("Please enter valid positive numbers in all fields");
                return false;
            }
            return true;
        });
    }

    // SIP Calculator
    function calculateSIP() {
        const amount = parseFloat(document.getElementById('sip-amount').value);
        const rate = parseFloat(document.getElementById('sip-rate').value);
        const years = parseFloat(document.getElementById('sip-years').value);

        if (!validateInputs(amount, rate, years)) return;

        const monthlyRate = rate / 1200;
        const months = years * 12;
        const futureValue = amount * ((Math.pow(1 + monthlyRate, months) - 1) / monthlyRate) * (1 + monthlyRate);
        document.getElementById('sip-result').innerHTML = `
            Future Value: ₹${futureValue.toFixed(2)}<br>
            Total Investment: ₹${(amount * months).toFixed(2)}<br>
            Estimated Returns: ₹${(futureValue - (amount * months)).toFixed(2)}
        `;
    }

    function resetSIP() {
        ['sip-amount', 'sip-rate', 'sip-years'].forEach(id => {
            document.getElementById(id).value = '';
        });
        document.getElementById('sip-result').innerHTML = '';
    }

    // EMI Calculator
    function calculateEMI() {
        const principal = parseFloat(document.getElementById('loan-amount').value);
        const annualRate = parseFloat(document.getElementById('interest-rate').value);
        const years = parseFloat(document.getElementById('loan-tenure').value);

        if (!validateInputs(principal, annualRate, years)) return;

        const monthlyRate = annualRate / 1200;
        const months = years * 12;
        const emi = (principal * monthlyRate * Math.pow(1 + monthlyRate, months)) / 
                   (Math.pow(1 + monthlyRate, months) - 1);
        
        document.getElementById('emi-result').innerHTML = `
            Monthly EMI: ₹${emi.toFixed(2)}<br>
            Total Payment: ₹${(emi * months).toFixed(2)}<br>
            Total Interest: ₹${(emi * months - principal).toFixed(2)}
        `;
    }

    function resetEMI() {
        ['loan-amount', 'interest-rate', 'loan-tenure'].forEach(id => {
            document.getElementById(id).value = '';
        });
        document.getElementById('emi-result').innerHTML = '';
    }

    // Retirement Planner
    function calculateRetirement() {
        const currentAge = parseFloat(document.getElementById('current-age').value);
        const retirementAge = parseFloat(document.getElementById('retirement-age').value);
        const monthlySavings = parseFloat(document.getElementById('monthly-savings').value);
        const annualReturn = parseFloat(document.getElementById('expected-return').value);

        if (!validateInputs(currentAge, retirementAge, monthlySavings, annualReturn)) return;

        const years = retirementAge - currentAge;
        const monthlyReturn = annualReturn / 1200;
        const months = years * 12;
        const futureValue = monthlySavings * ((Math.pow(1 + monthlyReturn, months) - 1) / monthlyReturn);
        
        document.getElementById('retirement-result').innerHTML = `
            Retirement Corpus: ₹${futureValue.toFixed(2)}<br>
            Total Savings: ₹${(monthlySavings * months).toFixed(2)}<br>
            Estimated Growth: ₹${(futureValue - (monthlySavings * months)).toFixed(2)}
        `;
    }

    function resetRetirement() {
        ['current-age', 'retirement-age', 'monthly-savings', 'expected-return'].forEach(id => {
            document.getElementById(id).value = '';
        });
        document.getElementById('retirement-result').innerHTML = '';
    }

    // ... (Keep existing LIC, Gold Loan, and Pay Commission functions from previous version)
    // [Include all previous calculator functions here with similar validation and reset functions]
</script>

</body>
</html>
